seqdiag {
  # Change edge metrics
  edge_length = 150; // default value is 192
  span_height = 0;   // default value is 40

  # Change note color
  default_note_color = lightblue;

  # actors (in order left to right)
  User; Controller; Broker; APIServer; BOSHOperator; Deployment-Hook; Bosh; Service; IaaS;

  # trigger provisioning of service instance
  User ->> Controller [label = "cf create-service"] {
    Controller => Broker [label = "run provisioning", return = "ok"] {
      Broker => APIServer [label = "create lock resource on deployment", return = "true"];
      Broker => APIServer [label = "Create a director resource with state as in_queue", return = "true"];
    }
  }

  APIServer -> BOSHOperator [label = "Trigger watcher for new create request"]
  BOSHOperator => Deployment-Hook [label = "run pre-create script", return = "pre-create response"]
  BOSHOperator ->> Bosh [label = "bosh deploy"]
  BOSHOperator -> APIServer [label = "sets director resource state as in_progress", return = "true"];
        
  
  # bosh starts deployment
  BOSHOperator => IaaS [label = "request/release resources"]

  # controller asks for last operation status
  Controller => Broker [label = "last operation?", return = "in progress"] {
    Broker => APIServer [label = "last operation of director resource?", return = "processing"]
  }

  BOSHOperator -> BOSHOperator [ label = "Start Poller" ];

  # BOSHOperator asks for last operation status
  BOSHOperator => BOSHOperator [ label = "check status" ]{
    BOSHOperator => Bosh [label = "task state?", return = "in progress"]
    BOSHOperator => APIServer [label = "sets last operation as in progress"]
  }

  # bosh continues deployment
  Bosh => Service [label = "monit start all"]
  BOSHOperator <<-- Bosh [label = "deployment completed\nno actual callback"]

  # BOSHOperator asks for last operation status
  BOSHOperator => BOSHOperator [ label = "check status" ]{
    BOSHOperator => Bosh [label = "task state?", return = "succeeded"]
    BOSHOperator => Controller [label = "create security-group", return = "ok", leftnote = 
              "This is done only if needed"]
    BOSHOperator => APIServer [label = "sets last operation as succeeded"]
  }

  # controller asks for last operation status
  Controller => Broker [label = "last operation?", return = "succeeded"] {
    Broker => APIServer [label = "last operation state of director resource??", return = "succeeded"]
    Broker => APIServer [label = "remove the lock resource", return = "succeeded"]
  }

  User <<-- Controller [label = "creation completed\nno actual callback"]
}
